What happens when you initialize a repository? Why do you need to do it?

	When initializing a git repository, git creates an empty repository in which you are able to begin adding (commiting) files to. You need to do this so that git can begin tracking the changes made to files and store them in meta data versioning.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area holds files that you want to add to your next commit. This allows you to pre-determine and give a snapshot of which files you want to be included in your commit before you actually commit them.

How can you use the staging area to make sure you have one commit per logical change?
	The staging area will allow for one to double check what they are planning to commit as well as examine the changes via git diff before commiting anything to the repository.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches would be helpful in situations in which you desire to add a new feature or create a second version of the same program or website. This is helpful because it allows you to not disrupt the master branch when making the changes.